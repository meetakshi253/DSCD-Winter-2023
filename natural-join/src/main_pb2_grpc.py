# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import main_pb2 as main__pb2


class MainStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.register = channel.unary_unary(
                '/mapReduce.Main/register',
                request_serializer=main__pb2.RegisterRequest.SerializeToString,
                response_deserializer=main__pb2.RegisterResponse.FromString,
                )
        self.submitResult = channel.unary_unary(
                '/mapReduce.Main/submitResult',
                request_serializer=main__pb2.SubmissionRequest.SerializeToString,
                response_deserializer=main__pb2.SubmissionResponse.FromString,
                )
        self.workerReady = channel.unary_unary(
                '/mapReduce.Main/workerReady',
                request_serializer=main__pb2.WorkerReadyRequest.SerializeToString,
                response_deserializer=main__pb2.WorkerReadyResponse.FromString,
                )


class MainServicer(object):
    """Missing associated documentation comment in .proto file."""

    def register(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def submitResult(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def workerReady(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MainServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'register': grpc.unary_unary_rpc_method_handler(
                    servicer.register,
                    request_deserializer=main__pb2.RegisterRequest.FromString,
                    response_serializer=main__pb2.RegisterResponse.SerializeToString,
            ),
            'submitResult': grpc.unary_unary_rpc_method_handler(
                    servicer.submitResult,
                    request_deserializer=main__pb2.SubmissionRequest.FromString,
                    response_serializer=main__pb2.SubmissionResponse.SerializeToString,
            ),
            'workerReady': grpc.unary_unary_rpc_method_handler(
                    servicer.workerReady,
                    request_deserializer=main__pb2.WorkerReadyRequest.FromString,
                    response_serializer=main__pb2.WorkerReadyResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mapReduce.Main', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Main(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mapReduce.Main/register',
            main__pb2.RegisterRequest.SerializeToString,
            main__pb2.RegisterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def submitResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mapReduce.Main/submitResult',
            main__pb2.SubmissionRequest.SerializeToString,
            main__pb2.SubmissionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def workerReady(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mapReduce.Main/workerReady',
            main__pb2.WorkerReadyRequest.SerializeToString,
            main__pb2.WorkerReadyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
